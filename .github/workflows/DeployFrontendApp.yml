name: Build and Deploy FrontendApp to ECS

on:
  push:
    paths:
      - "frontend/**"
    branches:
      - main

env:
  # Setting an environment variable with the value of a configuration variable
  ECR_FRONTEND_IMAGE: ${{ vars.ECR_FRONTEND_IMAGE }}
  AWS_DEFAULT_REGION: ${{ vars.AWS_DEFAULT_REGION }}
  ECS_CLUSTER: ${{ vars.ECS_CLUSTER }}
  ECS_FRONTEND_SERVICE: ${{ vars.ECS_FRONTEND_SERVICE }}
  Container-Name: ${{ vars.CONTAINER_NAME1 }}
jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Docker
        uses: docker/setup-buildx-action@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Login to Amazon ECR
        run: |
          aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com

      - name: Build and push Docker image
        #id: build-image
        run: |
          cd frontend
          docker buildx create --use
          docker buildx inspect --bootstrap
          docker buildx build -t ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$ECR_FRONTEND_IMAGE:latest --push .
          echo "::set-output name=image::975049941899.dkr.ecr.us-east-1.amazonaws.com/ai-voice-assistant-frontend/$ECR_FRONTEND_IMAGE:latest"

      #- name: Render Task Definition
       # id: render_task_definition
        #uses: aws-actions/amazon-ecs-render-task-definition@v1
        #with:
         # task-definition: .github/workflows/Task_definition.json
          #container-name: ${{ vars.CONTAINER_NAME1 }}
          #image: ${{ steps.build-image.outputs.image }}

      #- name: Deploy to ECS
       # uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        #with:
         # task-definition: ${{ steps.render_task_definition.outputs.task-definition }}
          #service: public-ecs-service  # Update with your ECS service name
          #cluster: my-cluster  
          #wait-for-service-stability: true 
      - name: Deploy to ECS
        uses: imehedi/actions-awscli-v2@latest
        with:
           args: ecs update-service --cluster my-cluster --service public-ecs-service --force-new-deployment
        env:
            AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
            AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            AWS_DEFAULT_REGION: "us-east-1a"
