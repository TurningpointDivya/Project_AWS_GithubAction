name: Build and Deploy BackendApp to ECS

on:
  push:
    paths:
      - "backend/**"
    branches:
      - main

env:
  # Setting an environment variable with the value of a configuration variable
  ECR_BACKEND_IMAGE: ${{ vars.ECR_BACKEND_IMAGE }}
  AWS_DEFAULT_REGION: ${{ vars.AWS_DEFAULT_REGION }}
  ECS_CLUSTER: ${{ vars.ECS_CLUSTER }}
  ECS_BACKEND_SERVICE: ${{ vars.ECS_BACKEND_SERVICE }}
  ECS_TD: .github/workflows/td.json
jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      #- name: Set up QEMU for arm64
      #  run: |
        #  docker run --rm --privileged multiarch/qemu-user-static --reset -p yes
      #  if: runner.os == 'Linux'

      #- name: Set up Docker for arm64
       # uses: docker/setup-qemu-action@v2
       # with:
       #   platforms: linux/arm64

      - name: Set up Docker
        uses: docker/setup-buildx-action@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Login to Amazon ECR
        run: |
          aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com

      - name: Build and push Docker image
        id: build-image
        run: |
          cd backend
          docker buildx create --use
          docker buildx inspect --bootstrap
          docker buildx build  -t ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$ECR_BACKEND_IMAGE:latest --push .
          echo "::set-output name=image::975049941899.dkr.ecr.us-east-1.amazonaws.com/ai-voice-assistant-backend/$ECR_BACKEND_IMAGE:latest"

      - name: Fill in the new image ID in the Amazon ECS task definition
        id: task-def-1
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
            task-definition: ${{ env.ECS_TD }}
            container-name: private-container
            image: ${{ steps.build-image.outputs.image }}
  

      - name: Deploy to ECS
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          args: ecs update-service --cluster my-cluster --service private-ecs-service --force-new-deployment
        env:
          AWS_ACCESS_KEY_ID: ${{secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: "us-east-1"
          task-definition: ${{ steps.task-def-1.outputs.task-definition }}
          service:  ${{ vars.ECS_BACKEND_SERVICE }}
          cluster:  ${{ vars.ECS_CLUSTER }}
          wait-for-service-stability: true
